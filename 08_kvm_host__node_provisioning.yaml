# ------------------------------------------------------------------------------------------ #
#                                                                                            #
#                Copyright (c) 2021 - Gilles Freart. All right reserved                      #
#                                                                                            #
#  Licensed under the MIT License. See LICENSE in the project root for license information.  #
#                                                                                            #
# ------------------------------------------------------------------------------------------ #

- name: This playbook provisions node VMs
  hosts: kvm_host

  vars_files:
    - vars/default-settings.yaml
    - group_vars/kvm_guest/cloud_images.yaml
    
  tasks:

    - block:
        - name: Loading CentOS 7 cluster samples
          include_vars:
            file:        vars/testlab_samples/centos-7.yaml
            name:        c7x
        - name: Loading CentOS 8 Stream cluster samples
          include_vars:
            file:        vars/testlab_samples/centos-8-stream.yaml
            name:        c8s
        - name: Loading Ubuntu 20.04 cluster samples
          include_vars:
            file:        vars/testlab_samples/ubuntu-20.04.yaml
            name:        u2004
        - name: Loading Ubuntu 20.10 cluster samples
          include_vars:
            file:        vars/testlab_samples/ubuntu-20.10.yaml
            name:        u2010
        - name: Loading Your custom cluster definition
          include_vars:
            file:        vars/clusters.yaml
            name:        custo
        - name: Merging all cluster definitions
          set_fact:
            clusters: "{{ custo | combine(c7x, recursive=True) | combine(c8s, recursive=True) | combine(u2004, recursive=True) | combine(u2010, recursive=True) }}"

    - name: Node provisionning -- Computing instance directory
      set_fact:
        instance_dir: "instances/{{ lookup('file', '/var/lib/dbus/machine-id') }}"
        
    - terraform:
        project_path:                  "{{ instance_dir }}/{{ cluster_name }}/terraform/node"
        force_init:                    true
        variables:
          hostname:                    "{{ cluster_name }}-node"
          domain:                      "{{ clusters.definition[cluster_name].network.domain }}"
          iface:                       "{{ clusters.definition[cluster_name].network.iface }}"
          keymap:                      "{{ keymap }}"
          timezone:                    "{{ timezone }}"
          libvirt_network:             "{{ clusters.definition[cluster_name].network.bridge }}"
          libvirt_pool:                "{{ cluster_name }}"
          cpu:                         "{{ clusters.definition[cluster_name].nodes.vcpu }}"
          memory:                      "{{ clusters.definition[cluster_name].nodes.mem }}"
          vm_count:                    "{{ clusters.definition[cluster_name].nodes.vms }}"
          cloud_init_file:             "{{ cloud_images[clusters.definition[cluster_name].guest_os]['cloud_init_file'] }}" 
          os_image_path:               "{{ libvirt_node_image_path  }}/{{ cluster_name }}/{{ cloud_images[clusters.definition[cluster_name].guest_os]['image_name'] }}-node.qcow2"
          id_rsa_pub_path:             "../../sshkey/id_rsa.pub"
          username:                    "{{ username }}"
          password:                    "{{ password }}"
        state: present
      register: output_nodes

    - name: Node provisionning -- Add Nodes to given group
      add_host:
        hostname:                      '{{ cluster_name }}-node-{{ "%02d" | format (item + 1) }}.{{ clusters.definition[cluster_name].network.domain }}'
        node_hostname:                 '{{ cluster_name }}-node-{{ "%02d" | format (item + 1) }}.{{ clusters.definition[cluster_name].network.domain }}'
        node_fqdn:                     '{{ cluster_name }}-node-{{ "%02d" | format (item + 1) }}.{{ clusters.definition[cluster_name].network.domain }}'
        node_mac:                      "{{ output_nodes.outputs.macs.value[item]|lower }}"
        ansible_ssh_private_key_file:  "{{ instance_dir }}/{{ cluster_name }}/sshkey/id_rsa"
        ansible_user:                  "{{ username }}"
        ansible_ssh_common_args:       "-o StrictHostKeyChecking=no"
        groups:
          - "nodes"
        group_children: "clusters_nodes"
      loop: "{{ range(0, clusters.definition[cluster_name].nodes.vms) | list }}"

    - name: Node provisionning -- Clean related Known Hosts
      known_hosts:
        host:    "{{ item }}"
        path:    ~/.ssh/known_hosts
        state:   absent
      loop:      "{{ groups['nodes']  }}"
      
